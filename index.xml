<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on SFDevs</title><link>https://sfdevs.com/</link><description>Recent content in Home on SFDevs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Oct 2018 20:51:23 -0500</lastBuildDate><atom:link href="https://sfdevs.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Trying out AWS.Tools in Docker</title><link>https://sfdevs.com/posts/external_posts/2020-02-04-brian-olson-trying-out-aws-tools-in-docker/</link><pubDate>Tue, 04 Feb 2020 22:08:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2020-02-04-brian-olson-trying-out-aws-tools-in-docker/</guid><description>If you’re a frequent user of the AWS Powershell tools, you’ve probably had this experience: you go to run a couple commands against your AWS environment. You do it all the time, so you know to type
But out of force of habit you type
And hit the tab key. Now you’re sitting and waiting for several minutes while Powershell loads all of the AWS modules for IAM, ECS, Cloudfront, S3, etc, etc, etc, even though you only want to interact with EC2.</description></item><item><title>Hosting is a Detail</title><link>https://sfdevs.com/posts/external_posts/2020-01-30-aligned-dev-hosting-is-a-detail/</link><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2020-01-30-aligned-dev-hosting-is-a-detail/</guid><description>Hosting is a detail Last summer, we read Clean Architecture by Bob Martin as a book club at Omnitech. We all learned a lot. I even co-presented at SD Code Camp about Clean Architecture with John Townsend. Uncle Bob showed us in his book that we need to isolate our Critical Business Rule Code from our Application Rule Code. Then we need to create another layer to isolate from the details such as the database, devices, web, UI and external interfaces.</description></item><item><title>Fundamentals of networking for web developers</title><link>https://sfdevs.com/events/fundamentals-of-networking-for-web-developers-268122064/</link><pubDate>Wed, 29 Jan 2020 20:41:16 +0000</pubDate><guid>https://sfdevs.com/events/fundamentals-of-networking-for-web-developers-268122064/</guid><description>We have all used the internet. Some of us might even have written code for a web site. Now let’s demystify how it all works. Things to be covered: basics of networking and networking tools, how do domain names and addresses work, network structure and topology, protocols, layers, and packets Network factors affecting web reliability and performance, and the future of web networks. Carsforsale.com will be providing pizza and beverages for this meetup.</description></item><item><title>AWS Lambda Functions with Modular Powershell</title><link>https://sfdevs.com/posts/external_posts/2020-01-18-brian-olson-aws-lambda-functions-with-modular-powershell/</link><pubDate>Sat, 18 Jan 2020 23:46:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2020-01-18-brian-olson-aws-lambda-functions-with-modular-powershell/</guid><description>It’s been a while since AWS released support for running Powershell in Lambda Functions. Up until now all of the Lambda functions I’ve worked with have been either python or NodeJS, but we recently had a project that needed to update a database from inside of a deployment pipeline.
We’re trying to retire an old admin box where users would run Powershell management scripts to do things like provision servers, configure customer accounts, etc.</description></item><item><title>My troubleshooting routine</title><link>https://sfdevs.com/posts/external_posts/2020-01-04-brian-olson-my-troubleshooting-routine/</link><pubDate>Sat, 04 Jan 2020 18:54:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2020-01-04-brian-olson-my-troubleshooting-routine/</guid><description>This post is going to have fewer technical examples and be more about my troubleshooting methodology. The concepts I’m going to describe may seem rudimentary to some, intuitive to others, and eye opening to a few. I’ve watched enough junior engineers wrestle with solving vague problems I felt it was worth documenting my approach.
When you’re a junior developer or a computer science it’s easy to get used curated problems — that is bugs or issues that are scoped for you and may come with some guidance toward a solution.</description></item><item><title>Hack Sioux Falls Final Projects (Fall 2019)</title><link>https://sfdevs.com/posts/external_posts/2020-01-02-william-bushee-hack-sioux-falls-final-projects-fall-2019/</link><pubDate>Thu, 02 Jan 2020 03:05:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2020-01-02-william-bushee-hack-sioux-falls-final-projects-fall-2019/</guid><description>Eleven kids, ten meet-ups, one shorted board, a dozen blown LEDs, zero burnt finger, one story on KDLT, and two months of fun &amp;amp; creativity. That sums up our fourth Hack Sioux Falls project hosted by Code Bootcamp School. When I first launched this project last year, I had no idea what to expect orRead more</description></item><item><title>Auditing network traffic in and out of the AWS cloud!</title><link>https://sfdevs.com/events/auditing-network-traffic-in-and-out-of-the-aws-cloud-267209355/</link><pubDate>Wed, 01 Jan 2020 09:52:38 +0000</pubDate><guid>https://sfdevs.com/events/auditing-network-traffic-in-and-out-of-the-aws-cloud-267209355/</guid><description>Adam Tischler, Senior consultant at Secunetics, will be presenting on auditing traffic in and out of the AWS cloud!
Special thanks to our hosts, cars for sale, and our sponsors TEKsystems!
There will be pizza before the meetup and a little time for professional networking, so come hungry!</description></item><item><title>Updating Service Fabric after updating .Net Core 3.1 and the Nuget packages</title><link>https://sfdevs.com/posts/external_posts/2019-12-13-aligned-dev-updating-service-fabric-after-updating-net-core-3-1-and-the-nuget-packages/</link><pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-12-13-aligned-dev-updating-service-fabric-after-updating-net-core-3-1-and-the-nuget-packages/</guid><description>Updating Service Fabric after updating .Net Core 3.1 and the Nuget packages While working on a SF Stateful Service that was .Net Core 2.2, .Net Core 3.1 was released. After I upgraded all the Nuget Packages I started getting a runtime exception in the SF explorer for my service that it couldn’t find C:\Program Files\Microsoft Service Fabric\bin\Fabric\Fabric.Code\NS_7. On 12/13/2019, I had these versions local: 6.3.176.9494, SDK 3.2.176.9494. We are quite behind.</description></item><item><title>Software Engineer</title><link>https://sfdevs.com/jobs/software-engineer-anchorage-4429188002/</link><pubDate>Sat, 07 Dec 2019 09:59:48 -0600</pubDate><guid>https://sfdevs.com/jobs/software-engineer-anchorage-4429188002/</guid><description>Role Description: Build secure, resilient, and global infrastructure from the ground up! Review code across the entire stack and engineering organization while actively participating in product development. Find the right balance between progress (i.e. shipping quickly) and perfection (i.e. measuring twice). Foster an efficient deterministic testing culture, with an emphasis on minimizing tech debt and bureaucracy. Influence architecture/product roadmap - have a seat at the table. Collaborate cross-functionally with everyone.</description></item><item><title>AWS re:Invent 2019: devOps highlights &amp; end of year circle up</title><link>https://sfdevs.com/events/aws-re-invent-2019-devops-highlights-end-of-year-circle-up-266956015/</link><pubDate>Sat, 07 Dec 2019 10:44:07 +0000</pubDate><guid>https://sfdevs.com/events/aws-re-invent-2019-devops-highlights-end-of-year-circle-up-266956015/</guid><description>This will be a casual mixer event&amp;ndash;with informal presentations on AWS re:Invent 2019 highlights. A time &amp;amp; place to consider the past year and the next with socializing, drinks, snacks &amp;amp; a landing spot for devOps folks from all quarters.</description></item><item><title>More Changes Coming for the Laminas Project</title><link>https://sfdevs.com/posts/external_posts/2019-12-05-phly-boy-phly-matthew-weier-o-phinney-more-changes-coming-for-the-laminas-project/</link><pubDate>Thu, 05 Dec 2019 16:45:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-12-05-phly-boy-phly-matthew-weier-o-phinney-more-changes-coming-for-the-laminas-project/</guid><description>Progress has been happening at a furious pace on the Zend Framework to Laminas transition, with major changes still dropping even now.
Most recently, we decided to rename the subprojects. Apigility will become the Laminas API Tools, and Expressive will become Mezzio.
For more background, read the Zend by Perforce blog post.</description></item><item><title>Become more productive with a clipboard manager</title><link>https://sfdevs.com/posts/external_posts/2019-12-05-aligned-dev-become-more-productive-with-a-clipboard-manager/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-12-05-aligned-dev-become-more-productive-with-a-clipboard-manager/</guid><description>Become more productive with a clipboard manager As a developer, I find myself re-using the same strings I’ve copied over and over. Rather then putting those items in Notepad++ and then copying them again when I need them, I’ve found that a clipboard manager makes this much faster. I’ve been using Ditto for years. Windows 10 has a clipboard manager that came in 2019, just hit Windows + V. Visual Studio 2019 also has a clipboard ring history tool.</description></item><item><title>An Apology to php[world] Attendees</title><link>https://sfdevs.com/posts/external_posts/2019-10-17-phly-boy-phly-matthew-weier-o-phinney-an-apology-to-php-world-attendees/</link><pubDate>Thu, 17 Oct 2019 18:30:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-10-17-phly-boy-phly-matthew-weier-o-phinney-an-apology-to-php-world-attendees/</guid><description>Due to disorganization on my part, I accidentally booked php[world] 2019 to coincide with a family commitment.
After reviewing a variety of options, I let the organizers know last week that I could no longer attend. It&amp;rsquo;s a situation I hate, because there&amp;rsquo;s nobody to blame but me, and no matter what option I could come up with, somebody would end up disappointed or inconvenienced. For my part, my family had to come first.</description></item><item><title>Looking For A New Adventure</title><link>https://sfdevs.com/posts/external_posts/2019-10-03-phly-boy-phly-matthew-weier-o-phinney-looking-for-a-new-adventure/</link><pubDate>Thu, 03 Oct 2019 20:44:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-10-03-phly-boy-phly-matthew-weier-o-phinney-looking-for-a-new-adventure/</guid><description>Fourteen years ago, almost to the day, I received a job offer from Zend to join their nascent eBiz team, where I started contributing almost immediately to the yet-to-be-announced Zend Framework. Two years later, I joined the Zend Framework team full-time. A year later, I was promoted to Architect. A year after that, I was promoted to Project Lead of Zend Framework, a role I kept for the next ten years.</description></item><item><title>Deploying WASM to Fastly's Edge</title><link>https://sfdevs.com/posts/external_posts/2019-09-06-bryanburgers-deploying-wasm-to-fastly-s-edge/</link><pubDate>Fri, 06 Sep 2019 15:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-09-06-bryanburgers-deploying-wasm-to-fastly-s-edge/</guid><description>Not so long ago, Fastly introduced a new platform for edge programming. Fastly&amp;rsquo;s vision is to use wasm to sandbox and run applications, which means that any language that can compile to wasm can run on their edge servers.
The idea of edge functions is by no means new. Amazon does it with Lambda, CloudFlare has Workers, Google Cloud and Azure both call theirs Functions.
To the best of my knowledge, Fastly&amp;rsquo;s offering is unique in its use of wasm, and this has enabled them to have really fast boot and response times.</description></item><item><title>Hack Sioux Falls Final Projects (Spring 2019)</title><link>https://sfdevs.com/posts/external_posts/2019-07-28-william-bushee-hack-sioux-falls-final-projects-spring-2019/</link><pubDate>Sun, 28 Jul 2019 13:14:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-07-28-william-bushee-hack-sioux-falls-final-projects-spring-2019/</guid><description>Eighteen kids, eight meet-ups, zero shorted boards, seven blown LEDs, one burnt finger, and two months of fun &amp;amp; creativity. That sums up our third Hack Sioux Falls project hosted by Code Bootcamp School. When I first launched this project last year, I had no idea what to expect or what the kids would findRead more</description></item><item><title>PCI Access Without a Driver</title><link>https://sfdevs.com/posts/external_posts/2019-07-09-bryanburgers-pci-access-without-a-driver/</link><pubDate>Tue, 09 Jul 2019 19:45:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-07-09-bryanburgers-pci-access-without-a-driver/</guid><description>At work recently, I had a new PCI device that I needed to experiment with. I was dreading writing a Linux kernel driver to talk to it. It turns out, Linux makes it possible to read and write to a PCI device&amp;rsquo;s memory space without a driver! Woohoo!
Linux provides a sysfs interface to PCI devices. From that interface, the memory space can be mmaped and then read and written. No driver involved.</description></item><item><title>Node.js on IBM i: Easy Peasy</title><link>https://sfdevs.com/posts/external_posts/2019-06-05-sobored-node-js-on-ibm-i-easy-peasy/</link><pubDate>Wed, 05 Jun 2019 21:51:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-06-05-sobored-node-js-on-ibm-i-easy-peasy/</guid><description>Node.js is on the rise in the IBM i ecosystem. People are taking notice, but there is still a misconception among some that Node.js and other open source software are difficult to install on IBM i. This article aims to show just how easy peasy it is to get Node.js installed, configured, and running fine on IBM i.
Prerequisite This article assumes that you have yum installed and accessible on your IBM i instance.</description></item><item><title>How to Pass Variables to a Partial Template in Hugo</title><link>https://sfdevs.com/posts/external_posts/2019-04-14-harmstyler-how-to-pass-variables-to-a-partial-template-in-hugo/</link><pubDate>Sun, 14 Apr 2019 02:05:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-04-14-harmstyler-how-to-pass-variables-to-a-partial-template-in-hugo/</guid><description>As a developer, I want to keep my code as DRY as is feasible for the given project. In a Hugo project, that’s where the Partial templates come in. Partials are smaller, context-aware components in your list and page templates that can be used economically to keep your templating DRY. Partials, however, have one serious limitation, they’re cached during the build of a given page (or scope). Once a partial has been created, no outside logic can adjust what the partial returns (for the page).</description></item><item><title>Community blogs</title><link>https://sfdevs.com/posts/list/</link><pubDate>Sat, 13 Apr 2019 00:00:00 -0500</pubDate><guid>https://sfdevs.com/posts/list/</guid><description/></item><item><title>Hosting Hugo on Aws Cloudfront and Route53 Using Ansible</title><link>https://sfdevs.com/posts/external_posts/2019-04-12-shellrunner-hosting-hugo-on-aws-cloudfront-and-route53-using-ansible/</link><pubDate>Fri, 12 Apr 2019 16:06:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-04-12-shellrunner-hosting-hugo-on-aws-cloudfront-and-route53-using-ansible/</guid><description>It’s really easy to to set up a website on AWS’s s3 service, but if you want to use a certificate (you do), it’s just a bit more work. With Ansible as my hammer, everything is a nail. Here’s a quick playbook I used to set up my site jxn.is to use cloudfront. This playbook creates the bucket, sets up an s3 website in the bucket, creates a cloudfront distribution with reasonable parameters, enables an existing Certificate Manager certificate on the site, and points DNS records at the cloudfront distribution.</description></item><item><title>Getting Ec2 Instance Availability Zone With Curl or Powershell</title><link>https://sfdevs.com/posts/external_posts/2019-03-10-shellrunner-getting-ec2-instance-availability-zone-with-curl-or-powershell/</link><pubDate>Sun, 10 Mar 2019 15:54:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-03-10-shellrunner-getting-ec2-instance-availability-zone-with-curl-or-powershell/</guid><description>I’m a big fan of AWS’s SDK’s and API tools because they’re so comprehensive and easy to use, in general, but I sometimes forget that there’s another good, even simpler API for getting data from some AWS resources… the magical http://169.254.169.254/ http endpoint! This endpoint provides read-only metadata about resources once you have access, and doesn’t require additional authentication. This is very handy, for instance, when a client gives me SSH or RDP access to an EC2 instance and I need to know its size, network info, or in this case what Availability Zone it is in:</description></item><item><title>DSU / AT&amp;T Hackathon</title><link>https://sfdevs.com/posts/external_posts/2019-02-27-william-bushee-dsu-at-t-hackathon/</link><pubDate>Wed, 27 Feb 2019 03:15:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-02-27-william-bushee-dsu-at-t-hackathon/</guid><description>We did it. We challenged 15 DSU students to solve real-world problems for first responders. And then we gave them 48-hours to research, prototype a solution, and then pitch those solutions to a panel of first responders “There are companies spending millions of dollars on solutions that are not this good.” A response from oneRead more</description></item><item><title>Contrast Ratio Calculator</title><link>https://sfdevs.com/posts/external_posts/2019-02-17-harmstyler-contrast-ratio-calculator/</link><pubDate>Sun, 17 Feb 2019 17:13:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-02-17-harmstyler-contrast-ratio-calculator/</guid><description>Making sure webistes are accessible is a big deal these days. Websites should be mindful of their audience to make sure people with disabilities are not excluded from the site content. Color contrasts between foregrounds and backgrounds is an easy miss when checking that a site is accessible, but one that is vital to hard of sight users.</description></item><item><title>Trying Out Hugo</title><link>https://sfdevs.com/posts/external_posts/2019-02-08-shellrunner-trying-out-hugo/</link><pubDate>Fri, 08 Feb 2019 01:27:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-02-08-shellrunner-trying-out-hugo/</guid><description>I’ve been pretty heavily reorganizing and simplifying my life lately, so it was time to replace the tired old Wordpress blog at ShellRunner with something more deserving. Wordpress has been a great platform over the years, but as a constant target of attacks, it could also be a pain to keep up. Also, it’s much more fun to write my posts in Markdown, instead of in a browser editor. This is post #1 trying out Hugo, a fast static generator written in Go with a lot of features.</description></item><item><title>Solving the "We were unable to load Disqus" Error</title><link>https://sfdevs.com/posts/external_posts/2019-01-27-jasoderstrom-solving-the-we-were-unable-to-load-disqus-error/</link><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-01-27-jasoderstrom-solving-the-we-were-unable-to-load-disqus-error/</guid><description>TLDR: Make sure you&amp;rsquo;re setting the category_id field in the Disqus load script to a valid value, or just don&amp;rsquo;t use it at all.
Problem While migrating my blog over to GatsbyJS from Ghost, I ran into this peculiar error when trying to load Disqus.
We were unable to load Disqus. If you are a moderator please see our troubleshooting guide
This particular error was quite annoying because it gave no information on what actually went wrong.</description></item><item><title>How to Debug Entity Framework Migration Errors</title><link>https://sfdevs.com/posts/external_posts/2019-01-21-jasoderstrom-how-to-debug-entity-framework-migration-errors/</link><pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-01-21-jasoderstrom-how-to-debug-entity-framework-migration-errors/</guid><description>Prerequisite In this article, I assume you have a working knowledge of the Entity Framework ORM and its migrations feature. If you don’t, take a look through Entity Framework documentation and its migrations section before continuing.
Introduction If you’ve ever worked with the Entity Framework ORM for any length of time, then you’ve likely worked with its migrations feature. And more than likely, you’ve had to debug one (or many) of your migrations when trying to run an update-database through the package manager console.</description></item><item><title>Showing Firefox close tab on tab hover</title><link>https://sfdevs.com/posts/external_posts/2019-01-03-austin-hanson-showing-firefox-close-tab-on-tab-hover/</link><pubDate>Thu, 03 Jan 2019 14:51:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2019-01-03-austin-hanson-showing-firefox-close-tab-on-tab-hover/</guid><description>I switched from Chrome to Firefox a few months ago. For the most part…it feels roughly the same but there was one subtle difference that finally irked me to the point of googling: having to right click on a tab to close it. In Chrome, when you hover over the active tab the close button pops up. This means you can pretty easily close multiple tabs by clicking the last tab on the right, clicking close, and then repeatedly clicking as the close tab appears in each successive tab.</description></item><item><title>IBM i Dotfiles CLI RPM &amp; SoBored RPM Repo</title><link>https://sfdevs.com/posts/external_posts/2018-12-28-sobored-ibm-i-dotfiles-cli-rpm-sobored-rpm-repo/</link><pubDate>Fri, 28 Dec 2018 21:12:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2018-12-28-sobored-ibm-i-dotfiles-cli-rpm-sobored-rpm-repo/</guid><description>Due to community feedback about the install process and usage of my IBM i Dotfiles, I have decided to create a command line interface (CLI) and an RPM to install the aforementioned CLI. Welcome the IBM i CLI RPM and SoBored RPM Repo.
This was also an experiment for myself to learn how to build RPMs and host an RPM repo. I have a feeling that I’ll be adding more RPMs over time.</description></item><item><title>Avoiding Route Collision in eZ Platform</title><link>https://sfdevs.com/posts/external_posts/2018-12-19-harmstyler-avoiding-route-collision-in-ez-platform/</link><pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2018-12-19-harmstyler-avoiding-route-collision-in-ez-platform/</guid><description>eZ Platform boils down to a set of Symfony bundles that give you a nice way of managing content for your users. With these bundles, eZ reserves some routing paths for internal or admin use, paths that you might want for your own app. If you ever run across a path you want to use for your app, and not break an internal eZ feature, there is a simple solution: change the path config.</description></item><item><title>Setting up a static site in S3</title><link>https://sfdevs.com/posts/external_posts/2018-11-29-zvekovius-setting-up-a-static-site-in-s3/</link><pubDate>Thu, 29 Nov 2018 02:44:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2018-11-29-zvekovius-setting-up-a-static-site-in-s3/</guid><description>A Static Website I had a great conversation with a friend from work about doing some devblog stuff. Till then, I hadn’t heard of generating static web pages, especially not with some content generator. I was intrigued to say the least. Here we are, writing a devblog and utilizing some cool stuff. The only problems I have with this plan: The phrase devblog is not my favorite, and I’m not great at writing.</description></item><item><title>About SFDevs</title><link>https://sfdevs.com/about/</link><pubDate>Sun, 07 Oct 2018 15:17:51 -0500</pubDate><guid>https://sfdevs.com/about/</guid><description>Nestled in the middle of the Heartland you&amp;rsquo;ll find Sioux Falls, SD. Sioux Falls has a booming developer community, we&amp;rsquo;re also known as the &amp;ldquo;Silicon Prairie.&amp;rdquo;
The Sioux Falls Developer&amp;rsquo;s Group is open to developers in the area. Each month we bring in speakers to present on a wide variety of software development topics. Once a year, we put on a developer centric conference, South Dakota Code Camp.
Site Design: TEMPLATED.</description></item><item><title>Submit a job</title><link>https://sfdevs.com/jobs/submit/</link><pubDate>Sun, 07 Oct 2018 15:17:51 -0500</pubDate><guid>https://sfdevs.com/jobs/submit/</guid><description/></item><item><title>Template Literals and Tagged Templates</title><link>https://sfdevs.com/posts/external_posts/2018-09-02-of-miles-rausch-template-literals-and-tagged-templates/</link><pubDate>Sun, 02 Sep 2018 02:34:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2018-09-02-of-miles-rausch-template-literals-and-tagged-templates/</guid><description>The ES6 spec blessed us with a new string superpower. Strings are already pretty lucky. Developers can use single quotes or double quotes to wrap around a string. (Some languages only get half that many options!) So what need is there for another (apparent) string wrapper?
Template Literals Template Literals solve a couple thorny issues with traditional strings. Whether you wrap a string in single or double quotes, it’s still a static line of text.</description></item><item><title>IBM i Dotfiles – How to Configure BASH on IBM i</title><link>https://sfdevs.com/posts/external_posts/2018-06-08-sobored-ibm-i-dotfiles-how-to-configure-bash-on-ibm-i/</link><pubDate>Fri, 08 Jun 2018 17:48:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2018-06-08-sobored-ibm-i-dotfiles-how-to-configure-bash-on-ibm-i/</guid><description>Dotfiles – Hidden configuration files, usually found in one’s home directory, that are characterized by the dot at the beginning of the filename. Example: .profile
If you’re like me and need to access many IBM i instances, copying your dotfile configurations and keeping them synced between instances can become cumbersome. Maybe you don’t need to access multiple IBM i instances, but you have complex configurations and scripts, and would like to keep them version controlled simply for organization and backup.</description></item><item><title>Extending the Iterator Trait in Rust</title><link>https://sfdevs.com/posts/external_posts/2018-01-11-bryanburgers-extending-the-iterator-trait-in-rust/</link><pubDate>Thu, 11 Jan 2018 13:20:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2018-01-11-bryanburgers-extending-the-iterator-trait-in-rust/</guid><description>In Wrapped Iterators in Rust, I played around with creating an Iterator struct like Rust&amp;rsquo;s native Map&amp;amp;lt;I&amp;amp;gt;, Enumerate&amp;amp;lt;I&amp;amp;gt;, Filter&amp;amp;lt;I&amp;amp;gt;, etc. that wraps an iterator to create a new iterator.
I&amp;rsquo;m pretty happy with how it turned out. But there&amp;rsquo;s one thing I didn&amp;rsquo;t like about it.
When dealing with iterables in Rust, they can all be chained nicely together. For example,
some_iter .map(...) .filter(...) .enumerate() .collect() The CircularEnumerate&amp;amp;lt;I&amp;amp;gt; class I was playing with is in every way a peer to Rust&amp;rsquo;s classes, except that it can&amp;rsquo;t be chained.</description></item><item><title>C# .NET Core, Console App, DI, and Serilog - Getting Started</title><link>https://sfdevs.com/posts/external_posts/2017-12-21-austin-hanson-c-net-core-console-app-di-and-serilog-getting-started/</link><pubDate>Thu, 21 Dec 2017 15:43:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-12-21-austin-hanson-c-net-core-console-app-di-and-serilog-getting-started/</guid><description>My day job involves a lot of .NET Core development and a whole lot of logging. As a result, I’ve become accustomed to having logs when I need them. When working on pet projects I usually don’t spend as much time on the “niceties” of life. Lately I’ve started doing it a little more and wanted to detail some findings.
Command line apps with CommandLineApplication # There’s a lot of resources out there on using Microsoft’s new CommandLineApplication.</description></item><item><title>Inspecting OpenEdge metadata with SQL</title><link>https://sfdevs.com/posts/external_posts/2017-12-03-zedfox-inspecting-openedge-metadata-with-sql/</link><pubDate>Sun, 03 Dec 2017 05:25:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-12-03-zedfox-inspecting-openedge-metadata-with-sql/</guid><description>Inspecting OpenEdge metadata with SQL OpenEdge’s virtual system tables (VSTs) provide excellent statistics that help in database development and maintenance. This article shows a few SQL statements that help reveal information about the database.
SQL to query metadata Show all VST tables that contain metadata.
Find columns in a table
Show all the indexes on a table
Assuming UPDATE TABLE STATISTICS AND INDEX STATISTICS AND ALL COLUMN has been run, get # of records for each table.</description></item><item><title>Viewing query plan with SQL in OpenEdge</title><link>https://sfdevs.com/posts/external_posts/2017-12-03-zedfox-viewing-query-plan-with-sql-in-openedge/</link><pubDate>Sun, 03 Dec 2017 02:39:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-12-03-zedfox-viewing-query-plan-with-sql-in-openedge/</guid><description>Viewing query plan with SQL in OpenEdge It is important to review query plan produced by the database and improve queries from time to time. OpenEdge generates query plan for the queries you write. This article shows how to view query plan in OpenEdge.
View query plan Let’s say the query below is taking a long time:
When this query is executed, _sql_plan table is populated with information about how the query was processed.</description></item><item><title>Create table with SQL in OpenEdge</title><link>https://sfdevs.com/posts/external_posts/2017-12-03-zedfox-create-table-with-sql-in-openedge/</link><pubDate>Sun, 03 Dec 2017 02:35:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-12-03-zedfox-create-table-with-sql-in-openedge/</guid><description>Create table with SQL in OpenEdge One of the most basic and important database objects is tables. We can create tables with either ABL or SQL. This article discusses how to create table with SQL and the various datatypes and constraints that can be used to create them. Documentation of create table is covered quite well on https://documentation.progress.com/output/ua/OpenEdge_latest/index.html#page/dmsrf/create-table.html.
Primary key and unique key in OpenEdge Progress OpenEdge has primary and unique key constraints.</description></item><item><title>Slides and Demo for Building Progressive Web Apps using CFML</title><link>https://sfdevs.com/posts/external_posts/2017-07-20-of-miles-rausch-slides-and-demo-for-building-progressive-web-apps-using-cfml/</link><pubDate>Thu, 20 Jul 2017 18:36:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-07-20-of-miles-rausch-slides-and-demo-for-building-progressive-web-apps-using-cfml/</guid><description>Thanks everyone for coming to my talk at cf.Objective() 2017! If you missed my talk, or just want to learn more about Progressive Web Apps, feel free to browse the links below.
Browse the slides at http://slides.com/awayken/2017cfobjective
Find the code at https://github.com/awayken/pwa-marketing-site</description></item><item><title>Using() block hell in C#</title><link>https://sfdevs.com/posts/external_posts/2017-04-28-austin-hanson-using-block-hell-in-c/</link><pubDate>Fri, 28 Apr 2017 20:05:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-04-28-austin-hanson-using-block-hell-in-c/</guid><description>So the other day I was working on transforming streams for an encryption layer for work. I ended up having some code that looked similar to this:
public async Task SendAsync(byte[] data, Delegate next) { using (var stream = ...) { using (var encryptStream = ...) { using (var encodeStream = ...) { using (var reader = ...) { await next(...); } } } } } public async Task RecieveAsync(byte[] data, Delegate next) { using (var stream = .</description></item><item><title>Add React Hot Reloading to create-react-app</title><link>https://sfdevs.com/posts/external_posts/2017-04-06-josh-broton-add-react-hot-reloading-to-create-react-app/</link><pubDate>Thu, 06 Apr 2017 19:50:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2017-04-06-josh-broton-add-react-hot-reloading-to-create-react-app/</guid><description>I love create-react-app. I’ve used it as the boilerplate generator for the last 4 projects I’ve worked on. I’ve tried other React boilerplates, but always come back because of it’s great foundation, as well as it’s ability to be ejected and customized.
One thing I miss dearly is hot reloading. React Hot Loader is, in my opinion, one of the killer features of React that makes it better/faster to develop with than any other front-end technology I’ve ever used.</description></item><item><title>powershell bashrc equivalent</title><link>https://sfdevs.com/posts/external_posts/2016-08-09-sclarson-powershell-bashrc-equivalent/</link><pubDate>Tue, 09 Aug 2016 14:59:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-08-09-sclarson-powershell-bashrc-equivalent/</guid><description>One complaint I hear a lot from the linux users who have to do windows admin work for a random project the most common thing I hear a complaint about is a bashrc equivalent. I’ve been asked about it a few times and knew you could do this at the local user level and replied with that but never thought about changing it at a system level.
 If you’re mostly doing linux work you probably aren’t familiar with the scripting guy blog on microsoft.</description></item><item><title>PostCSS: A Dumb Name For an Awesome Thing</title><link>https://sfdevs.com/posts/external_posts/2016-06-22-of-miles-rausch-postcss-a-dumb-name-for-an-awesome-thing/</link><pubDate>Wed, 22 Jun 2016 15:10:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-06-22-of-miles-rausch-postcss-a-dumb-name-for-an-awesome-thing/</guid><description>Bolstered by my reception at the South Dakota Code Camp, I updated and presented my PostCSS talk at dev.Objective() 2016, one of the best web development and CFML conferences in the states. I think it went well, despite my quickly expiring laptop.
You can view the slides on Slides.com.
You can browse the demo repository on GitHub.com.
You can learn more about my postcss-placehold plugin on GitHub.com.
Thanks to everyone who came!</description></item><item><title>Windows XP and Slow HTTP Requests</title><link>https://sfdevs.com/posts/external_posts/2016-06-21-opello-windows-xp-and-slow-http-requests/</link><pubDate>Tue, 21 Jun 2016 05:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-06-21-opello-windows-xp-and-slow-http-requests/</guid><description>This week at work I was faced with a bug that manifested as Windows XP clients being slower to access parts of a web interface than Windows 7 or 10. This was strange because in Wireshark the requests looked basically the same.
It turned out that the embedded system hosting the web interface was rejecting Ethernet frames larger than 1500 bytes. This was most likely because of a misinterpretation of the MTU as referring to the frame size (at layer 2) instead of the payload size (at layer 3).</description></item><item><title>So You Want to Change the Gravity Forms Form Tag…</title><link>https://sfdevs.com/posts/external_posts/2016-04-01-josh-broton-so-you-want-to-change-the-gravity-forms-form-tag/</link><pubDate>Fri, 01 Apr 2016 02:32:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-04-01-josh-broton-so-you-want-to-change-the-gravity-forms-form-tag/</guid><description>I had an interesting request from a client today. They use Pardot to integrate with the forms on their old website, and wanted to do the same with their new WordPress theme. We’re using the always spectacular Gravity Forms for the forms on the site.
I did the integrations, and we got an error.
I didn’t realize (but now it makes perfect sense) that Gravity Forms defaults to enctype=”multipart/form-data”. I scoured the Gravity Forms settings, looking for a way to switch that to the correct enctype without any luck.</description></item><item><title>NameSilo API from PowerShell</title><link>https://sfdevs.com/posts/external_posts/2016-02-14-opello-namesilo-api-from-powershell/</link><pubDate>Sun, 14 Feb 2016 06:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-02-14-opello-namesilo-api-from-powershell/</guid><description>A friend asked several people on irc about NameSilo&amp;rsquo;s API and dynamic DNS entries. He found a PowerShell script to update a subdomain with the current IP address of the system running the script. The subdomain detail was the crux of the question: how to get it to update a &amp;ldquo;naked&amp;rdquo; domain. Several of us read through the API reference but the dnsUpdateRecord function didn&amp;rsquo;t explain how to update the base domain&amp;rsquo;s A record.</description></item><item><title>Linux Performance</title><link>https://sfdevs.com/posts/external_posts/2016-02-08-sclarson-linux-performance/</link><pubDate>Mon, 08 Feb 2016 17:37:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-02-08-sclarson-linux-performance/</guid><description>I’ve been asked a few times for how to find performance issues around various types on linux. The old man in me wants to tell people to read the man pages. The nice person in me says “Read and watch Brendan Gregg’s material. It is amazingly well done.”
He even has content specific to EC2 for you cloud users</description></item><item><title>Churn (code)</title><link>https://sfdevs.com/posts/external_posts/2016-02-08-sclarson-churn-code/</link><pubDate>Mon, 08 Feb 2016 17:27:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-02-08-sclarson-churn-code/</guid><description>One of the most useful things when you’re new to a codebase can be to look at version control and find out who owns what parts of the codebase and how where are the hottest spots in the codebase.
Corey Haines posted a gist years ago of a great way to get the second part of that info with various constraints.
churn number and file namegit log --all -M -C --name-only | sort | uniq -c | sort | awk 'BEGIN {print &amp;quot;count,file&amp;quot;} {print $1 &amp;quot;,&amp;quot; $2}'</description></item><item><title>Change is Scary; The Future is Bright</title><link>https://sfdevs.com/posts/external_posts/2016-01-25-josh-broton-change-is-scary-the-future-is-bright/</link><pubDate>Mon, 25 Jan 2016 16:20:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2016-01-25-josh-broton-change-is-scary-the-future-is-bright/</guid><description>After two awesome years, it’s time. My last day at Lemonly will be this Friday, January 29th. That’s a hard thing for me to write. I’ve been at Lemonly since December 2013, two of the best years of my life. But as with all things in life, change is what keeps us scared and growing.
What’s next? I’m finally starting my own business. I’ve been doing contract front-end development, building anything from huge web apps to WordPress themes, for startups and agencies, part time, for almost 5 years.</description></item><item><title>Python and JSON-RPC</title><link>https://sfdevs.com/posts/external_posts/2013-12-01-opello-python-and-json-rpc/</link><pubDate>Sun, 01 Dec 2013 06:00:00 +0000</pubDate><guid>https://sfdevs.com/posts/external_posts/2013-12-01-opello-python-and-json-rpc/</guid><description>In playing with Bitcoin, in this case specifically with the bitcoin-qt client, I found myself wanting to more granularly control which of my coins I spent. This probably isn&amp;rsquo;t something most people care about, or maybe even solve by using multiple wallets, but I thought that it would be nice to choose which addresses were used for transactions. I found that I was not alonein that desire. But sadly, the patch has yet to be merged despite going through a number of iterations.</description></item></channel></rss>